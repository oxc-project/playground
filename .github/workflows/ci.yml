name: CI

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */3 * * *' # Build and deploy every 3 hours.
  pull_request:
    types:
      - opened
      - synchronize
    paths-ignore:
      - README.md
  push:
    branches:
      - main
    paths-ignore:
      - README.md

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: ${{ github.ref_name != 'main' }}

permissions: {}

jobs:
  check-typos:
    name: Check typos
    if: github.event_name != 'schedule'
    runs-on: ubuntu-latest
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1
      - uses: crate-ci/typos@80c8a4945eec0f6d464eaf9e65ed98ef085283d1 # v1.38.1
        with:
          files: .

  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
    permissions:
      pull-requests: write
      contents: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: oxc-project/oxc
          ref: main
          persist-credentials: false

      - uses: oxc-project/setup-node@fdbf0dfd334c4e6d56ceeb77d91c76339c2a0885 # v1.0.4

      - uses: oxc-project/setup-rust@1ff88fdaffd6ae35c0fb32ccc159340b37d0beac # v1.0.7
        with:
          save-cache: ${{ github.ref_name == 'main' }}
          tools: just

      - run: rustup target add wasm32-wasip1-threads

      - run: just build-playground
      - run: git rev-parse --short HEAD > napi/playground/git-commit

      - run: cd .. && mv playground oxc && mkdir playground

      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1

      - uses: oxc-project/setup-node@fdbf0dfd334c4e6d56ceeb77d91c76339c2a0885 # v1.0.4

      - run: pnpm run build

      - name: Install Netlify
        if: env.SITE_ID
        run: pnpm install -g netlify-cli@18.1.0

      # https://www.raulmelo.me/en/blog/deploying-netlify-github-actions-guide
      - name: Deploy to Netlify
        id: netlify_deploy
        if: env.SITE_ID
        run: |
          mv _headers dist
          prod_flag=""
          if [ "${GITHUB_REF_NAME}" = "main" ]; then prod_flag="--prod"; fi
          echo $prod_flag
          netlify deploy \
            --dir dist \
            --site ${{ secrets.NETLIFY_SITE_ID }} \
            --auth ${{ secrets.NETLIFY_API_TOKEN }} \
            $prod_flag \
            --json \
            > deploy_output.json
          cat deploy_output.json

      - name: Generate URL Preview
        id: url_preview
        if: env.SITE_ID && github.event_name == 'pull_request'
        run: |
          NETLIFY_PREVIEW_URL=$(jq -r '.deploy_url' deploy_output.json)
          echo "NETLIFY_PREVIEW_URL=$NETLIFY_PREVIEW_URL" >> $GITHUB_OUTPUT

      - uses: peter-evans/create-or-update-comment@e8674b075228eee787fea43ef493e45ece1004c9 # v5.0.0
        if: env.SITE_ID && github.event_name == 'pull_request'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.number }}
          body: 'Preview URL: ${{ steps.url_preview.outputs.NETLIFY_PREVIEW_URL }}'
